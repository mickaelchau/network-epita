TTL = 256 (decrement the IP packets)
multiples networks for different needs.

ISO = for strandardization
CISCO = leader in network

reseaux = chaines d'equipements interconnectes les uns aux autres.
small/home office/ SOHO => small network (for a home) to xDSL to Network

main office centralizes all data of branch offices

Proxy
1)
- voit passer une demande
- la stocke dans un cache/serveur local pour permettre 
à d'autres users de l'utiliser

2)
- filtrage des URLS

Serveur
1)
Machine avec une volumétrie élevée

Application serveurs:
- paquets ips distribué sur une addresse ip.
- une fois les paquets arrivés, les ports sont utilisés pour trouver le bon
service.

Virtualization qui permet de répondre au pb des serveurs utilisés 10% du temps.

Application clientes se connectent à un serveur.

firewall = 
- permet de protéger contre l'extérieur, les serveurs webs
appli web/serveur exposé dans la DMZ, firewall protège aussi la DMZ.
- bloque tout ce qui vient de l'extérieur. (untrust)
- Tout ce qui vient de l'intérieur (trust)
Toujours 2 firewalls = dans la machine et dans le réseau.

Box:
- FW
- Modem
- Switch
- Routeurs
- Borne Wifi

router with switches.

modulateur = module le signal numérique à un signal analogique.
demodulateur = l'inverse

Characteristics of a Network:
- scalability = network design to manage all fluctuations of the network
- reliability = double everything => Two is one, one is nothing

full duplex: tout le monde parle en même temps
half duplex: chacun prend la parole.

cluster: serveur qui fonctionnent en même temps.

supervision: volumétrie du réseau
- si plus de 900 paquets IP => on arrête

Switch: ce qui permet de communiquer entre machine du même réseau ip.
Routeur: 
- ETH -> HDLC (high datalink control) /PPP

On s'engage sur la reliability d'un réseau.


TOPOLOGIES
- Partial mesh (pas tous reliés) topology (only routers)
- Jamais vraiment uniques

Logical topology: path along which data travel from one point to another in net

Le switch ne peut pas enviyer des data dans une addresse ip externe a son subnet

routeur connecter en lien serial/ETH

1 milliard de bits/s = Gi0
plus petit = Fa

bande passante = ce que tu as au maximum
débit: qt de bits/s

sdn (software define network) = envoie de cmd a partir d'un serveur central.

CE QUI PASSE DANS LE RESEAU
- transporte ce qui est généré par les batch app (FTP = envoie de fichiers
  découpés en morceau (username, securité, ...), TFTP = pas de sécu, les 2
  partis doivent etre confiants ex = serveurs)

TYPES D'APPLICATIONS
Batch = programmés par l'user, lancés à un moment précis.
important = la bande passante

applications interractives ex: site qui vend des chocolats
important = Temps de réponse

application temps réelles ex: jeu video
important=latence

chaque requête a une "couleur" qui va plus ou moins mettre une priorité sur un
critère précis au niveau des routeurs et des switchs

temps aller-retour = latence

HOST TO HOST COMMUNICATIONS
- comm de 2 != machines avec un protocole => Network
Protocole propriétaire => Puis création d'un modèle standardisé, structuré, en
couche.
- Protocole = ce qui permet à un algorithme dans la machine A à discuter avec
  l'algorithme de la machine B.
- vendor => équipementier
- Equipements: switch, routeurs, cartes, médias

OSI MODEL/Pile TCPIP:
- Installé dans l'OS
- Emetteur, ça descend et Receveur, remonte
- Couche Application => communication entre le réseau et une app
- Couche Présentation 
  - si la data brute n'est pas lisible par le destinataire 
  - Cryptage
- Couche Session => rentrer en contact avec le destinataire, (ex: reprise après
  interruption de réseau), tant que la Session n'a pas reçu un signal de fin,
  elle garde en mémoire un tableau avec des data du réseau.
- Couche Transport/Segmentation => quel type de protocole tu utilises pour envoyer 
    - Si tu veux du temps réel, rapide avec perte de data => UDP
    - Si tu veux un message strict => TCP
    - Couche qui crée des segments numérotés (qui peujvent emprunter des chemins 
      != et arriver dans un ordre !=)
    - Pas de remise de la data au destinataire tant que le message n'est pas
      reconstitué.
    - Les 2 couches transports se parlent entre elles.
        - Couche transport receveuse communique avec la couche transport
          émétrice si une data n'est pas reçue
- Couche Network => Addresse ip logique avec des ports (réglé avec le protocole 
  DHCP => Dynamic Host Configuration Protocol)
- Data link => carte réseau (Ethernet/carte wifi)
- Physique => câble => maintenant wifi

Pile TCP/IP est ce qui est vraiment implémenté:
- Application = info échangé entre les 2 couches Application: Data 
- Transport = info échangé entre les 2 couches Segment: Segment (num des
  segments)
- Internet = Packet (demande l'addresse du destinataire et l'analyse)
    - Fait la redirection entre routeur ou dans le réseau local
- Link = Frame/Trames => ce qui circule sur le réseau => informations de niveau
  2 gérées par la couche liaison

Schéma:
Application: Data 
|
Transport: Segment
|
Packet
|
Trame
|| 
Cable

Encapsulation = Ajout de tag sur la donnée


PARCOURS DE LA TRAME SUR LE RÉSEAU
- Le Switch ne s'intéresse qu'à la trame (l'addresse MAC)
- Le Routeur ne s'intéresse que à l'addresse ip, il régénère la couche 3
- Le Firewall s'intéresse à la couche transport, il régénère la couche 4 et 3

PDU (Protocol Data Unit) = Data, Segment, Packet, Trame

ENCAPSULATION
- Couche Transport => Ajoute l'entête de niveau 4 (HDR 4);

Le Routeur régénère un Header de départ du routeur et d'arrivée de l'addresse
MAC de la nouvelle destination.

Les addresses MAC changent mais pas les addresses IP.
FCS = checksum => formule mathématique généré par les datas en haut.
  - contrôle de la trame, première info 
  - ajouté pendant la couche 7

- Le blender = encryption des messages

INTRODUCING LAN
LAN = Network of computers and others components that are located close together
in a limited area.

Plusieurs types:
- Routeur avec différents Switch

ESXi = Elastic Sky X i = Instance EC2

Dans un réseau:
- Host = PC (app client) et serveurs (app serveur)
- Interconnections = NICs (Network Interface Card) et Network Media
- Network devices = Switches et routeurs

Principaux protocoles:
- ETH 
- IP
- DHCP (seulement pour les pcs jamais les serveurs, switches, routers qui ont 
  des IP addresses fixes car nom => résolution dns)
- ARP (Address Reslution Protocol addresse IP => addresse MAC) garde la 
  correspondance en cache
  - Machine parle en addresse MAC

Explication:
- Demande du MAC au serveur DNS
- Envoie d'une requête de Résolution DNS de "zalando.com" renvoie de l'addresse
  ip correspondante ARP => renvoie du MAC.
- Renvoie de l'adresse MAC du routeur
- Envoie de la requête finale 

(addresse du routeur switch deja connu)
Explication:
- on donne une machine au switch branché sur le port 1
- Le switch sait qu'il y a une addresse mac A sur le port 1 (il fait une table
  1,A => une table ARP)
- switch branché au routeur (switch fait une correspondance entre l'addresse MAc
  du routeur 2, B)

- Un msg est envoyé par la machine avec une gateway précisé.
- Le switch l'envoie par tous les autres ports excepté le port expédiant
- Le routeur (addresse du Gateway) renvoie son addresse mac à la machine 
  expédiante
- La machine connait l'addresse mac du routeur
- La machine peut directement communique avec le routeur

Switch = Commutateur = mettre en commun


